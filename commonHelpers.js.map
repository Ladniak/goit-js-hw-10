{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst startBtn = document.querySelector('button');\nstartBtn.setAttribute('disabled', true);\nconst selectInput = document.querySelector(\"#datetime-picker\");\nconst dataDays = document.querySelector('span[data-days]');\nconst dataHours = document.querySelector('span[data-hours]');\nconst dataMinutes = document.querySelector('span[data-minutes]');\nconst dataSeconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        \n        if (userSelectedDate < new Date()) {\n            startBtn.setAttribute('disabled', true);\n            iziToast.error({\n                message: 'Please choose a date in the future',\n            });\n        } else {\n            startBtn.removeAttribute('disabled');\n        }\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % hour) / minute));\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = (time) => {\n    dataDays.innerHTML = String(time.days).padStart(2, '0');\n    dataHours.innerHTML = String(time.hours).padStart(2, '0');\n    dataMinutes.innerHTML = String(time.minutes).padStart(2, '0');\n    dataSeconds.innerHTML = String(time.seconds).padStart(2, '0');\n}\n\nconst onBtnClick = () => {\n    const intervalId = setInterval(() => {\n        const currentDate = new Date();  \n        let distance = userSelectedDate - currentDate;\n\n        if (distance < 0) {\n            clearInterval(intervalId);\n            startBtn.removeAttribute('disabled');\n            selectInput.removeAttribute('disabled');\n            return;\n        }\n\n        const time = convertMs(distance);\n        addLeadingZero(time);\n\n        startBtn.setAttribute('disabled', true);\n        selectInput.setAttribute('disabled', true);\n    }, 1000);\n}\n\nstartBtn.addEventListener('click', onBtnClick);\n\n\n"],"names":["startBtn","selectInput","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","time","onBtnClick","intervalId","distance"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,aAAa,WAAY,EAAI,EACtC,MAAMC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/D,IAAIC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,CAAC,EAE9BF,EAAmB,IAAI,MACvBN,EAAS,aAAa,WAAY,EAAI,EACtCS,EAAS,MAAM,CACX,QAAS,oCACzB,CAAa,GAEDT,EAAS,gBAAgB,UAAU,CAE1C,CACL,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,KAAQ,KACpCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAkBC,GAAS,CAC7BhB,EAAS,UAAY,OAAOgB,EAAK,IAAI,EAAE,SAAS,EAAG,GAAG,EACtDf,EAAU,UAAY,OAAOe,EAAK,KAAK,EAAE,SAAS,EAAG,GAAG,EACxDd,EAAY,UAAY,OAAOc,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,EAC5Db,EAAY,UAAY,OAAOa,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,CAChE,EAEMC,EAAa,IAAM,CACrB,MAAMC,EAAa,YAAY,IAAM,CAEjC,IAAIC,EAAWf,EADK,IAAI,KAGxB,GAAIe,EAAW,EAAG,CACd,cAAcD,CAAU,EACxBpB,EAAS,gBAAgB,UAAU,EACnCC,EAAY,gBAAgB,UAAU,EACtC,MACH,CAED,MAAMiB,EAAOP,EAAUU,CAAQ,EAC/BJ,EAAeC,CAAI,EAEnBlB,EAAS,aAAa,WAAY,EAAI,EACtCC,EAAY,aAAa,WAAY,EAAI,CAC5C,EAAE,GAAI,CACX,EAEAD,EAAS,iBAAiB,QAASmB,CAAU"}